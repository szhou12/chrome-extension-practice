{"version":3,"file":"content.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA,IAEMA,gBAAgB;EAClB,SAAAA,iBAAA,EAAc;IAAAC,eAAA,OAAAD,gBAAA;IACV;IACA;IACA,IAAI,CAACE,aAAa,CAAC,CAAC;EACxB;EAACC,YAAA,CAAAH,gBAAA;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAH,cAAA,EAAgB;MAAA,IAAAI,KAAA;MACZC,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAK;QACpE;QACA,IAAIF,OAAO,CAACG,MAAM,IAAI,QAAQ,EAAER,KAAI,CAACS,eAAe,CAAC,CAAC;MAC1D,CAAC,CAAC;IACN;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAU,gBAAA,EAAkB;MACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACjC;EAAC;EAAA,OAAAjB,gBAAA;AAAA,KAGL;AACA,IAAMkB,aAAa,GAAG,IAAIlB,gBAAgB,CAAC,CAAC,C","sources":["webpack://empty-project/./src/index.js"],"sourcesContent":["// Test purpose for stage 5.4\n// chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n//     console.log(request)\n//     console.log(\"testing catching message\")\n// });\n\nclass ChatGPTExtension {\n    constructor() {\n        // call handleRequest() in contructor to make it work\n        // everytime this class is init, it will run handleRequest()\n        this.handleRequest()\n    }\n\n    handleRequest() {\n        chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n            // console.log(request)\n            if (request.action == \"PROMPT\") this.promptToChatGPT()\n        })\n    }\n\n    promptToChatGPT() {\n        console.log(\"prompting test\")\n    }\n}\n\n// Init an instance of ChatGPTExtension\nconst CGPTExtension = new ChatGPTExtension()"],"names":["ChatGPTExtension","_classCallCheck","handleRequest","_createClass","key","value","_this","chrome","runtime","onMessage","addListener","request","sender","sendResponse","action","promptToChatGPT","console","log","CGPTExtension"],"sourceRoot":""}