{"version":3,"file":"content.js","mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA,IAEMA,gBAAgB;EAClB,SAAAA,iBAAA,EAAc;IAAAC,eAAA,OAAAD,gBAAA;IAAAE,eAAA,kBAiCJ,0FAA0F;IAAAA,eAAA,kBAE1F,wCAAwC;IAlC9C;IACA;IACA,IAAI,CAACC,aAAa,CAAC,CAAC;EACxB;EAACC,YAAA,CAAAJ,gBAAA;IAAAK,GAAA;IAAAC,KAAA,EAED,SAAAH,cAAA,EAAgB;MAAA,IAAAI,KAAA;MACZC,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAK;QACpE;QACA,IAAIF,OAAO,CAACG,MAAM,IAAI,QAAQ,EAAER,KAAI,CAACS,eAAe,CAACT,KAAI,CAACU,OAAO,CAAC;QAClE,IAAIL,OAAO,CAACG,MAAM,IAAI,QAAQ,EAAER,KAAI,CAACS,eAAe,CAACT,KAAI,CAACW,OAAO,CAAC;MACtE,CAAC,CAAC;IACN;;IAEA;EAAA;IAAAb,GAAA;IAAAC,KAAA,EACA,SAAAU,gBAAgBG,MAAM,EAAE;MACpB;;MAGA;MACA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;MACxD;MACAF,KAAK,CAACd,KAAK,GAAGa,MAAM;MACpB,IAAMI,MAAM,GAAGF,QAAQ,CAACC,aAAa,CAAC,yBAAyB,CAAC;;MAEhE;MACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACjBD,MAAM,CAACC,QAAQ,GAAG,KAAK;MAC3B;MAEAD,MAAM,CAACE,KAAK,CAAC,CAAC,EAAC;IACnB;EAAC;EAAA,OAAAzB,gBAAA;AAAA,KAOL;AACA,IAAM0B,aAAa,GAAG,IAAI1B,gBAAgB,CAAC,CAAC,C","sources":["webpack://empty-project/./src/index.js"],"sourcesContent":["// Test purpose for stage 5.4\n// chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n//     console.log(request)\n//     console.log(\"testing catching message\")\n// });\n\nclass ChatGPTExtension {\n    constructor() {\n        // call handleRequest() in contructor to make it work\n        // everytime this class is init, it will run handleRequest()\n        this.handleRequest()\n    }\n\n    handleRequest() {\n        chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n            // console.log(request)\n            if (request.action == \"PROMPT\") this.promptToChatGPT(this.prompt1)\n            if (request.action == \"RENDER\") this.promptToChatGPT(this.prompt2)\n        })\n    }\n\n    // method that sends prompts to ChatGPT text box\n    promptToChatGPT(prompt) {\n        // console.log(\"prompting test\")\n        \n\n        // get the text area bar from ChatGPT web page\n        const input = document.querySelector(\"#prompt-textarea\")\n        // console.log(input)\n        input.value = prompt\n        const button = document.querySelector(\"#prompt-textarea~button\")\n\n        // Check if the button is disabled, and if so, enable it by removing the 'disabled' attribute\n        if (button.disabled) {\n            button.disabled = false;\n        }\n\n        button.click() // NOTE! The simulated clicking won't work as OpenAI prohibits it.\n    }\n\n    prompt1 = \"Please act as an experienced developer in chrome extension and assist me with a project.\"\n\n    prompt2 = \"Say hello world in 3 random languages.\"\n}\n\n// Init an instance of ChatGPTExtension\nconst CGPTExtension = new ChatGPTExtension()"],"names":["ChatGPTExtension","_classCallCheck","_defineProperty","handleRequest","_createClass","key","value","_this","chrome","runtime","onMessage","addListener","request","sender","sendResponse","action","promptToChatGPT","prompt1","prompt2","prompt","input","document","querySelector","button","disabled","click","CGPTExtension"],"sourceRoot":""}